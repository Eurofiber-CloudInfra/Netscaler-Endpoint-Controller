image: docker:18.09.7
stages:
  - Build image
  - Push image

variables:
   # When using dind service we need to instruct docker, to talk with the
   # daemon started inside of the service. The daemon is available with
   # a network connection instead of the default /var/run/docker.sock socket.
   #
   # The 'docker' hostname is the alias of the service container as described at
   # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
   #
   # Note that if you're using Kubernetes executor, the variable should be set to
   # tcp://localhost:2375 because of how Kubernetes executor connects services
   # to the job container
  DOCKER_HOST: tcp://localhost:2375
   # When using dind, it's wise to use the overlayfs driver for
   # improved performance.
  DOCKER_DRIVER: overlay2
   # reference
  TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
  RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

services:
- docker:18.09.7-dind

build:
  stage: Build image
  only:
  - test
  - master
  script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build -t $TEST_IMAGE .
  - docker push $TEST_IMAGE

master build:
 stage: Push image
 only:
 - master
 script:
 - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
 - docker pull $TEST_IMAGE
 - apk add --no-cache curl util-linux
 - curl -L -O https://downloads.dockerslim.com/releases/1.32.0/dist_linux.tar.gz
 - tar -zxvf dist_linux.tar.gz
 - script -q -c "dist_linux/docker-slim --report off build --show-clogs --http-probe=false --tag $RELEASE_IMAGE --continue-after 5 --include-path '/usr/local/lib/python3.7/site-packages/certifi' $TEST_IMAGE"
 - docker push $RELEASE_IMAGE  

